#Problem
''' Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. '''

#Answer
''' 4613732 '''

#Code Written & Designed by Kenneth Friedman

#function returns true if number is even
def isEven(fibNum):
	return (fibNum % 2 == 0)

#sum of even valued Fibonacci numbers (starts with 2, becuase loops starts with 3rd fib number)
sum = 2

#memoize fibonacci numbers into fibArray (starting with first 3 values)
fibArray = [0,1,2]
nextFib = 3
counter = 3

#loop until fib is greater than 4 million, add to sum if even
while(nextFib < 4000000):
	nextFib = fibArray[counter-1] + fibArray[counter-2]
	if isEven(nextFib):
		sum += nextFib
	fibArray.append(nextFib)
	counter += 1

#print result
print sum

